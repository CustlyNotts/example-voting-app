pipeline {
    
	agent none
    
    stages {
        stage('building') {
		docker {
		image 'python:2.7.16-slim'
		args '--user root'
}
		when {
			changeset "**/vote/**"
}
            steps {
                echo 'Compiling vote app'
                dir('vote') {
		sh 'pip install -r requirements.txt'
		}
            }
        }
        
        stage('testing') {
		docker {
		image 'python:2.7.16-slim'
		args '--user root'
}
		when {
			changeset "**/vote/**"
}
            steps {
                echo 'Running Unit tests on vote app'
                dir('vote') {
		sh 'nosetests -v'
            }
            
        }
}

stage('docker-package') {
	  agent any
	    when {
		changeset "**/vote/**"
		branch 'master'
	}
	steps {
		echo 'Packaging vote app with docker'
		script {
		   docker.withRegistry('https://index.docker.io/v1/', 'docker-login') {
			def voteImage = docker.build("custlynotts/vote:v${env.BUILD_ID}", "./vote")
			voteImage.push()
			voteImage.push("${env.BRANCH}")
			}
		}
	}
}            

}
    
    post {
        always {
            echo 'Pipeline for vote app is completed...'
        }
    }
}

